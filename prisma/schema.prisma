// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// aaaaa

model Post {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String?
  published Boolean @default(false)
  author    User?   @relation(fields: [authorId], references: [id])
  authorId  String?
}

model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  posts         Post[]
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// aaaaa

model Client {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  email     String    @unique
  name      String?
  address   String
  phone     String
  picName   String
  picPhone  String
  services  Service[]
  invoices  Invoice[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

enum PeriodTerm {
  OneTime
  Monthly
  Quarterly
  SemiAnually
  Anually
  Custom
}

enum StatusService {
  ACTIVE
  SUSPEND
  INACTIVE
}

model Service {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  name        String?
  description String
  periodTerm  PeriodTerm
  date        String
  activeTill  String
  amount      Float
  status      StatusService @default(ACTIVE)
  client      Client        @relation(fields: [clientId], references: [id])
  clientId    String        @db.ObjectId
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  deletedAt   DateTime?
  InvoiceItem InvoiceItem[]
}

enum Status {
  PENDING
  PAID
  CANCELLED
  EXPIRED
}

model Invoice {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  no            String        @unique
  date          String
  dueDate       String
  billTo        String
  billToAddress String
  billToPic     String
  items         InvoiceItem[]
  total         Float
  discount      Float         @default(0)
  vatValue      Float         @default(0)
  vatAmount     Float         @default(0)
  grandTotal    Float
  status        Status        @default(PENDING)
  cancelledAt   DateTime?
  paidAt        DateTime?
  paidInfo      String?
  client        Client        @relation(fields: [clientId], references: [id])
  clientId      String        @db.ObjectId
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  deletedAt     DateTime?
}

model InvoiceItem {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  invoice     Invoice    @relation(fields: [invoiceId], references: [id])
  invoiceId   String     @db.ObjectId
  service     Service    @relation(fields: [invoiceId], references: [id])
  serviceId   String     @db.ObjectId
  description String
  amount      Float
  discount    Float      @default(0)
  qty         Int
  totalAmount Float
  periodTerm  PeriodTerm
  periodStart String
  periodEnd   String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  deletedAt   DateTime?
}
